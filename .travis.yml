language: nix
nix: 2.3.6

env:
  global:
    - CACHIX_CACHE=sikmir
    - NUR_REPO=sikmir

jobs:
  include:
    - env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
      os: linux
    - env: NIX_CHANNEL=https://nixos.org/channels/nixos-unstable
      os: linux
    - env: NIX_CHANNEL=https://nixos.org/channels/nixos-20.03
      os: linux
    - env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
      os: osx
  allow_failures:
    - env: NIX_CHANNEL=https://nixos.org/channels/nixpkgs-unstable
      os: osx

cache:
  directories:
    - $HOME/nix.store

before_cache:
  - mkdir -p $HOME/nix.store
  - nix copy --to file://$HOME/nix.store

before_install:
  - sudo mkdir -p /etc/nix
  - echo "trusted-users = root $USER" | sudo tee -a /etc/nix/nix.conf
  - echo 'require-sigs = false' | sudo tee -a /etc/nix/nix.conf > /dev/null
  - echo "substituters = https://cache.nixos.org/ https://${CACHIX_CACHE}.cachix.org https://cachix.cachix.org file://$HOME/nix.store" | sudo tee -a /etc/nix/nix.conf > /dev/null

install:
  - nix --version
  - if [ -n "${CACHIX_CACHE}" ]; then travis_retry nix-channel --update; fi
  - if [ -n "${CACHIX_CACHE}" ]; then nix-env -iA cachix -f https://cachix.org/api/v1/install; fi
  - if [ -n "${CACHIX_CACHE}" ]; then cachix use "${CACHIX_CACHE}"; fi
  - nix-channel --add "${NIX_CHANNEL}" nixpkgs
  - travis_retry nix-channel --update

script:
  - nix-build ci.nix -A buildOutputs
  - nix eval -f default.nix 'lib'
  - nix eval -f default.nix 'modules'
  - nix eval -f default.nix 'overlays'

after_success:
  - if [ -n "${CACHIX_CACHE}" ]; then nix-build ci.nix -A cacheOutputs | cachix push "${CACHIX_CACHE}"; fi
  - if [ "false" = "${TRAVIS_PULL_REQUEST}" -a "master" = "${TRAVIS_BRANCH}" ]; then
    curl -XPOST "https://nur-update.herokuapp.com/update?repo=${NUR_REPO}"; fi
